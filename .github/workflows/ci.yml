name: CI

on:
  push:
    branches:
    - main
  pull_request: {}

env: {}

permissions:
  id-token: write  # This is required for requesting the JWT.
  contents: read   # This is required for actions/checkout.

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        skip-pkg-cache: true
        skip-build-cache: true
        args: --timeout=180s
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
    - name: Run unit tests
      run: make test
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
    - name: Build image
      run: make docker/build
  push:
    runs-on: ubuntu-latest
    needs:
    - lint
    - unit-tests
    - build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Generate timestamp
      id: generate-timestamp
      run: echo timestamp=$(date +%Y%m%d%H%M%S) >>$GITHUB_OUTPUT
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
    - name: Build image
      run: make docker/build DOCKER_IMAGE=$REGISTRY/$REPOSITORY DOCKER_IMAGE_TAG=$IMAGE_TAG
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ektopistis
        IMAGE_TAG: main-${{ github.sha }}-${{ steps.generate-timestamp.outputs.timestamp }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-west-2
        role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
        role-session-name: github-action
        role-duration-seconds: 300
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Push image
      run: docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
